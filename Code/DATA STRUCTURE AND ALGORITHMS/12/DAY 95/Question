### **K Closest Points to Origin**

**Difficulty:** Medium  
**Accuracy:** 62.4%  
**Submissions:** 16K+  
**Points:** 4

---

### **Problem Statement:**

Given an **array of points** where each point is represented as `points[i] = [xi, yi]` on the X-Y plane and an **integer k**, return the **k closest points** to the origin `(0, 0)`.

The distance between two points on the **X-Y plane** is calculated using the **Euclidean distance** formula:

\[
\text{distance} = \sqrt{(x_2 - x_1)^2 + (y_2 - y_1)^2}
\]

Since we only need relative distances for comparison, we can ignore the square root and compare squared distances:

\[
\text{distance}^2 = x^2 + y^2
\]

**Note:**

- The order of the returned k points **does not matter**, as the driver code will sort them before printing.

---

### **Examples:**

#### **Example 1:**

**Input:**

```
k = 2
points = [[1, 3], [-2, 2], [5, 8], [0, 1]]
```

**Output:**

```
[[-2, 2], [0, 1]]
```

**Explanation:**  
The Euclidean distances from the origin are:

- **(1, 3):** sqrt(10)
- **(-2, 2):** sqrt(8)
- **(5, 8):** sqrt(89)
- **(0, 1):** sqrt(1)

The **two closest points** are **[-2, 2]** and **[0, 1]**.

---

#### **Example 2:**

**Input:**

```
k = 1
points = [[2, 4], [-1, -1], [0, 0]]
```

**Output:**

```
[[0, 0]]
```

**Explanation:**  
The Euclidean distances from the origin are:

- **(2, 4):** sqrt(20)
- **(-1, -1):** sqrt(2)
- **(0, 0):** sqrt(0)

The **closest point** is **(0, 0)**.

---

### **Constraints:**

- \( 1 \leq k \leq \text{points.size()} \leq 10^5 \)
- \( -10^4 \leq x_i, y_i \leq 10^4 \)
