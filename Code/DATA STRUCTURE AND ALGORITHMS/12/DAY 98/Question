### **Parenthesis Checker**

**Difficulty:** Easy  
**Accuracy:** 28.56%  
**Submissions:** 644K+  
**Points:** 2

Given a string `s`, composed of different combinations of `'(' , ')' , '{' , '}' , '[' , ']'`, verify the validity of the arrangement.

An input string is valid if:

1. Open brackets must be closed by the same type of brackets.
2. Open brackets must be closed in the correct order.

### **Examples:**

#### **Input 1:**

```
s = "[{()}]"
```

#### **Output 1:**

```
true
```

#### **Explanation:**

All the brackets are well-formed.

---

#### **Input 2:**

```
s = "[()()]{}"
```

#### **Output 2:**

```
true
```

#### **Explanation:**

All the brackets are well-formed.

---

#### **Input 3:**

```
s = "([]"
```

#### **Output 3:**

```
false
```

#### **Explanation:**

The expression is not balanced as there is a missing `')'` at the end.

---

#### **Input 4:**

```
s = "([{]})"
```

#### **Output 4:**

```
false
```

#### **Explanation:**

The expression is not balanced as there is a closing `']'` before the closing `'}'`.

### **Constraints:**

- `1 ≤ s.size() ≤ 10^6`
- `s[i] ∈ {'{', '}', '(', ')', '[', ']'}`
