### **Problem: Find the First Node of Loop in Linked List**

**Difficulty:** Easy  
**Accuracy:** 55.49%  
**Submissions:** 59K+  
**Points:** 2

---

### **Problem Statement:**

Given the `head` of a singly linked list, determine the **first node** of the loop if a loop is present in the list. If no loop exists, return `NULL`.

---

### **Input Format:**

- `head`: The head of a singly linked list.
- An integer `pos` (1-based index), which denotes the position of the node to which the last node points.
  - If `pos = 0`, it means the last node points to `null`, indicating there is no loop.

---

### **Output Format:**

- Return the value of the **first node** of the loop if a loop exists.
- If no loop exists, return `-1`.

---

### **Examples:**

#### Example 1:

**Input:**  
`head: 1 -> 3 -> 4 -> 5`, `pos = 2`

**Output:**  
`3`

**Explanation:**  
There exists a loop, and the first node of the loop is `3`.

---

#### Example 2:

**Input:**  
`head: 1 -> 2 -> 3 -> 4 -> 5`, `pos = 0`

**Output:**  
`-1`

**Explanation:**  
No loop exists in the given linked list.

---

### **Constraints:**

- `1 ≤ number of nodes ≤ 10^6`
- `1 ≤ node->data ≤ 10^6`
- `0 ≤ pos ≤ Number of nodes in the Linked List`

---
