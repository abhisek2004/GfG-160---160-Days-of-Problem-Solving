# Stock Buy and Sell â€“ Multiple Transaction Allowed

**Difficulty**: Hard  
**Accuracy**: 13.43%  
**Submissions**: 119K+  
**Points**: 8

## Problem Statement

The cost of stock on each day is given in an array `prices[]`. Each day, you may decide to either buy or sell the stock at `prices[i]`. You can even buy and sell the stock on the same day. Find the maximum profit that you can get.

### Note:

- A stock can only be sold if it has been bought previously.
- Multiple stocks cannot be held on any given day.

### Examples:

#### Example 1:

**Input**:

```python
prices[] = [100, 180, 260, 310, 40, 535, 695]
```

**Output**:

```python
865
```

**Explanation**:

- Buy the stock on day 0 and sell it on day 3 => `310 - 100 = 210`
- Buy the stock on day 4 and sell it on day 6 => `695 - 40 = 655`
- **Maximum Profit = 210 + 655 = 865**

#### Example 2:

**Input**:

```python
prices[] = [4, 2, 2, 2, 4]
```

**Output**:

```python
2
```

**Explanation**:

- Buy the stock on day 3 and sell it on day 4 => `4 - 2 = 2`
- **Maximum Profit = 2**

### Constraints:

- `1 <= prices.size() <= 10^5`
- `0 <= prices[i] <= 10^4`

### Task:

Write a function that computes the maximum profit that can be obtained from multiple stock transactions, adhering to the above rules.

---

This problem will test your ability to apply greedy algorithms for maximum profit in stock trading scenarios.
