Find Smallest Missing Positive Number

Given an unsorted array arr[] with both positive and negative elements, the task is to find the smallest positive number missing from the array.

Note: You can modify the original array.

Examples:

Input: arr[] = {2, -3, 4, 1, 1, 7}
Output: 3
Explanation: 3 is the smallest positive number missing from the array.

Input: arr[] = {5, 3, 2, 5, 1}
Output: 4
Explanation: 4 is the smallest positive number missing from the array.

Input: arr[] = {-8, 0, -1, -4, -3}
Output: 1
Explanation: 1 is the smallest positive number missing from the array.

Table of Content

[Naive approach] By Sorting - O(n*log n) Time and O(n) Space
[Better approach] Using Visited Array - O(n) Time and O(n) Space
[Expected Approach] Using Cycle Sort - O(n) Time and O(1) Space
[Alternate Approach] By Negating Array Elements – O(n) Time and O(1) Space
[Alternate Approach] By Marking Indices – O(n) Time and O(1) Space
[Naive approach] By Sorting - O(n*log n) Time and O(n) Space
The idea is to sort the array and assume the missing number as 1. Now, iterate over the array and for each element arr[i],

If arr[i] == missing number, then increment missing number by 1.
If arr[i] < missing number, then continue to search for the missing number.
If arr[i] > missing number, then break and return the missing number

Output
3
[Alternate Approach] By Negating Array Elements – O(n) Time and O(1) Space
The idea is to first move all positive integers to the left side of the array. Then, we iterate over this left segment and mark the occurrences of each number x by negating the value at index (x - 1). Lastly, iterate over the left segment again and find the missing number by searching for the first unmarked element in it.

To know more about the implementation, please refer to Find Smallest Missing Positive Number by Negating Elements.

[Alternate Approach] By Marking Indices – O(n) Time and O(1) Space
The idea is to first check if 1 is present in the array or not. If not, the answer is 1. Otherwise, replace all the numbers outside the range [1, n] to 1. Then, iterate over the array again and mark the occurrences of each number, say x by adding n to index x - 1. Lastly, iterate over the array again to find the missing element by searching for the first unmarked index.

To know more about the implementation, please refer to Find Smallest Missing Positive Number by Marking Indices.
