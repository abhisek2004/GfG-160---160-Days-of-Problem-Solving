### **Fixing Two Nodes of a BST**

**Difficulty:** Hard  
**Accuracy:** 53.68%  
**Submissions:** 53K+  
**Points:** 8

---

### **Problem Statement:**

Given the root of a **Binary Search Tree (BST)** where **exactly two nodes** have been swapped by mistake, correct the BST by swapping them back. **Do not change the structure** of the tree.

---

### **Examples:**

#### **Example 1:**

**Input:**

```
root = [10, 5, 8, 2, 20]
```

**Output:**

```
1
```

**Explanation:**  
The nodes `20` and `8` were swapped. Restoring them will fix the BST.

---

#### **Example 2:**

**Input:**

```
root = [5, 10, 20, 2, 8]
```

**Output:**

```
1
```

**Explanation:**  
The nodes `10` and `5` were swapped. Restoring them will fix the BST.

---

### **Constraints:**

- `1 ≤ Number of nodes ≤ 10³`
