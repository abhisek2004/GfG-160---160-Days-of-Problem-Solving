Kth Missing Positive Number in a Sorted Array

Given a sorted array of distinct positive integers arr[] and integer k, the task is to find the kth positive number that is missing from arr[].

Examples :

Input: arr[] = [2, 3, 4, 7, 11], k = 5
Output: 9
Explanation: Missing are 1, 5, 6, 8, 9, 10, ... and 5th missing number is 9.

Input: arr[] = [1, 2, 3], k = 2
Output: 5
Explanation: Missing are 4, 5, 6.... and 2nd missing number is 5.

Input: arr[] = [3, 5, 9, 10, 11, 12], k = 2
Output: 2
Explanation: Missing are 1, 2, 4, 6, 7, 8, 13,... and 2nd missing number is 2.

Table of Content

[Naive Approach] Using Hash Set - O(n) Time and O(n) Space
[Better Approach] Using Index Comparison - O(n) Time and O(1) Space
[Expected Approach] Using Binary Search - O(log n) Time and O(1) Space
[Naive Approach] Using Hash Set - O(n) Time and O(n) Space
Insert all array elements into a hash set.
Now starting from 1, one by one search all natural numbers in the hash set and increment the missing count whenever a number is not present.
When the count of missing numbers become k, return the current number.
