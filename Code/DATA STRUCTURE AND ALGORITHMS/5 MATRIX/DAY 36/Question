**Problem Statement:**

Given a square matrix `mat[][]` of size `n x n`, the task is to rotate the matrix by 90 degrees in an anti-clockwise direction without using any extra space.

**Function Signature:**

```python
def rotate(mat: List[List[int]], n: int) -> None:
    pass
```

**Input:**

- A square matrix `mat[][]` of size `n x n` (1 ≤ n ≤ 102) where `mat[i][j]` (0 ≤ mat[i][j] ≤ 103) represents the element in the `i`-th row and `j`-th column of the matrix.

**Output:**

- The matrix rotated by 90 degrees in an anti-clockwise direction, without using any extra space.

**Example 1:**

**Input:**

```python
mat = [[1, 2, 3],
       [4, 5, 6],
       [7, 8, 9]]
rotate(mat, 3)
```

**Output:**

```python
[[3, 6, 9],
 [2, 5, 8],
 [1, 4, 7]]
```

**Example 2:**

**Input:**

```python
mat = [[1, 2],
       [3, 4]]
rotate(mat, 2)
```

**Output:**

```python
[[2, 4],
 [1, 3]]
```

**Constraints:**

- 1 ≤ n ≤ 102
- 0 ≤ mat[i][j] ≤ 103
