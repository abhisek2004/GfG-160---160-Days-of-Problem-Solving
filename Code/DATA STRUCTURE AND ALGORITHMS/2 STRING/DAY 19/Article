Minimum Characters to Add at Front for Palindrome

Given a string s, the task is to find the minimum number of characters to be added to the front of s to make it palindrome. A palindrome string is a sequence of characters that reads the same forward and backward.

Examples:

Input: s = "abc"
Output: 2
Explanation: We can make above string palindrome as "cbabc", by adding 'b' and 'c' at front.

Input: str = "aacecaaaa"
Output: 2
Explanation: We can make above string palindrome as "aaaacecaaaa" by adding two a's at front of string.

Table of Content

[Naive Approach] Checking all prefixes - O(n^2) Time and O(1) Space
[Expected Approach] Using lps array of KMP Algorithm - O(n) Time and O(n) Space
[Naive Approach] Checking all prefixes - O(n^2) Time and O(1) Space
The idea is based on the observation that we need to find the longest prefix from given string which is also a palindrome. Then minimum front characters to be added to make given string palindrome will be the remaining characters.

[caption width="800"]

Output
2
[Expected Approach] Using lps array of KMP Algorithm - O(n) Time and O(n) Space
The observation is that the longest palindromic prefix becomes longest palindromic suffix of its reverse.

For string = aacecaaaa
Reverse string = aaaacecaa
longest palindromic prefix = aacecaa

Now to find this prefix the idea is to use lps array of KMP algorithm, as each index of lps array represents the longest proper prefix which is also a suffix. First we concatenate the given string s with a special character '$' and with the reverse of given string s', then we will get lps array for this concatenated string( s + '$' + s').

We only need the last value of this lps[] array because it gives us the longest suffix of the reversed string that matches the prefix of the original string i.e., these many characters already satisfy the palindrome property. Finally minimum number of characters needed to make the string a palindrome is the length of the input string minus the last entry of our lps array.

How does the last value of lps[] array gives us the length of longest palindromic prefix?
