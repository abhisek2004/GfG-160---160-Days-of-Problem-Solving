### Problem: Non Repeating Character

**Difficulty**: Easy  
**Accuracy**: 40.43%  
**Submissions**: 235K+  
**Points**: 2

### Problem Description:

Given a string `s` consisting of lowercase Latin letters, return the **first non-repeating character** in `s`. If there is no non-repeating character, return `$`.

Note: When you return `$`, the driver code will output `-1`.

### Input:

- A string `s` of length `n` (1 <= n <= 10^5) containing only lowercase Latin letters.

### Output:

- A single character, the first non-repeating character in `s`.
- If no such character exists, return `$`.

### Example 1:

**Input**:

```plaintext
s = "geeksforgeeks"
```

**Output**:

```plaintext
'f'
```

**Explanation**:
In the given string, 'f' is the first character that does not repeat.

### Example 2:

**Input**:

```plaintext
s = "racecar"
```

**Output**:

```plaintext
'e'
```

**Explanation**:
In the given string, 'e' is the only character that does not repeat.

### Example 3:

**Input**:

```plaintext
s = "aabbccc"
```

**Output**:

```plaintext
-1
```

**Explanation**:
All characters in the string are repeating.

---

### Constraints:

- `1 <= s.size() <= 10^5`

---

### Solution Approach:

- Traverse through the string and keep a count of each character.
- Identify the first character in the string that appears exactly once.
- If no such character exists, return `$`.
