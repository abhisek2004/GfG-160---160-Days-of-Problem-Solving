### **Merge K Sorted Linked Lists**

**Difficulty:** Medium  
**Accuracy:** 57.01%  
**Submissions:** 102K+  
**Points:** 4

---

### **Problem Statement:**

You are given an **array of `n` sorted linked lists**, each of different sizes. The task is to **merge all the linked lists** into a **single sorted linked list** and return its head.

---

### **Examples:**

#### **Example 1:**

**Input:**

```
arr[] = [1 -> 2 -> 3, 4 -> 5, 5 -> 6, 7 -> 8]
```

**Output:**

```
1 -> 2 -> 3 -> 4 -> 5 -> 5 -> 6 -> 7 -> 8
```

**Explanation:**  
The `arr[]` contains 4 sorted linked lists of different sizes:  
1st list: **1 → 2 → 3**  
2nd list: **4 → 5**  
3rd list: **5 → 6**  
4th list: **7 → 8**  
After merging, the final sorted list is: **1 → 2 → 3 → 4 → 5 → 5 → 6 → 7 → 8**

---

#### **Example 2:**

**Input:**

```
arr[] = [1 -> 3, 8, 4 -> 5 -> 6]
```

**Output:**

```
1 -> 3 -> 4 -> 5 -> 6 -> 8
```

**Explanation:**  
The `arr[]` contains 3 sorted linked lists:  
1st list: **1 → 3**  
2nd list: **8**  
3rd list: **4 → 5 → 6**  
After merging, the final sorted list is: **1 → 3 → 4 → 5 → 6 → 8**

---

### **Constraints:**

- \( 1 \leq \) **Total number of nodes** \( \leq 10^5 \)
- \( 1 \leq \) **Node value** \( \leq 10^3 \)
