Check if Strings Are Rotations of Each Other

Given two string s1 and s2 of same length, the task is to check whether s2 is a rotation of s1.

Examples:

Input: s1 = "abcd", s2 = "cdab"
Output: true
Explanation: After 2 right rotations, s1 will become equal to s2.

Input: s1 = "aab", s2 = "aba"
Output: true
Explanation: After 1 left rotation, s1 will become equal to s2.

Input: s1 = "abcd", s2 = "acbd"
Output: false
Explanation: Strings are not rotations of each other.

Table of Content

[Naive Approach] Generating all rotations - O(n^2) Time and O(1) Space
[Expected Approach] Using KMP Algorithm - O(n) Time and O(n) Space
[Alternate Approach] Using Built-in Method
[Naive Approach] Generating all rotations - O(n^2) Time and O(1) Space
The idea is to generate all possible rotations of the first string and check if any of these rotations match the second string. If any rotation matches, the two strings are rotations of each other, otherwise they are not.

Output
true
Note: Time complexity of built-in methods differs in different languages.
