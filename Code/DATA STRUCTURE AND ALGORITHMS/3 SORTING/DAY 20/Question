**Problem: Sort 0s, 1s, and 2s**

Given an array `arr[]` containing only 0s, 1s, and 2s, sort the array in ascending order.

**Function Signature:**

```python
def sort012(arr: List[int]) -> None:
    pass
```

**Input:**

- A list of integers `arr[]` where each element is either 0, 1, or 2.
- The length of the array `arr` is between `1` and `10^6` (inclusive).

**Output:**

- The sorted array in-place in ascending order.

**Example 1:**

Input:  
`arr[] = [0, 1, 2, 0, 1, 2]`

Output:  
`[0, 0, 1, 1, 2, 2]`

**Example 2:**

Input:  
`arr[] = [0, 1, 1, 0, 1, 2, 1, 2, 0, 0, 0, 1]`

Output:  
`[0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2]`

**Constraints:**

- `1 <= arr.size() <= 10^6`
- `0 <= arr[i] <= 2`
