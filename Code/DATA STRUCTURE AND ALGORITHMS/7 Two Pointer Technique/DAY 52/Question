**Sum Pair Closest to Target**

**Difficulty**: Easy  
**Accuracy**: 44.75%  
**Submissions**: 36K+  
**Points**: 2

**Problem Statement**:  
Given an array `arr[]` and a number `target`, find a pair of elements `(a, b)` in `arr[]`, where `a <= b` whose sum is closest to the target.

**Note**:

- Return the pair in sorted order.
- If there are multiple such pairs, return the pair with the maximum absolute difference.
- If no such pair exists, return an empty array.

---

### **Examples**:

1. **Input**: `arr[] = [10, 30, 20, 5], target = 25`  
   **Output**: `[5, 20]`  
   **Explanation**: The sum `5 + 20 = 25` is closest to the target.

2. **Input**: `arr[] = [5, 2, 7, 1, 4], target = 10`  
   **Output**: `[2, 7]`  
   **Explanation**: Both `(4, 7)` and `(2, 7)` have sums closest to `10`, but the absolute difference of `(2, 7)` is `5`, which is larger than `(4, 7)` with a difference of `3`.

3. **Input**: `arr[] = [10], target = 10`  
   **Output**: `[]`  
   **Explanation**: As the input array has only one element, return an empty array.

---

### **Constraints**:

- `1 <= arr.size() <= 2*10^5`
- `0 <= target <= 2*10^5`
- `0 <= arr[i] <= 10^5`
