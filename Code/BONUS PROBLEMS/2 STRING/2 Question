### CamelCase Pattern Matching

**Problem Statement:**

Given a dictionary of words `arr[]` where each word follows CamelCase notation, print all words in the dictionary that match with a given pattern `pat` consisting of uppercase characters only.

CamelCase is the practice of writing compound words or phrases such that each word or abbreviation begins with a capital letter. Common examples include PowerPoint, Wikipedia, GeeksForGeeks, CodeBlocks, etc.

For example, `"GeeksForGeeks"` matches the pattern `"GFG"`, because if we combine all the capital letters in `"GeeksForGeeks"`, they become `"GFG"`. Also note that `"GeeksForGeeks"` matches with the pattern `"GFG"` and also `"GF"`, but does not match with `"FG"`.

### Input:

- An array of strings `arr[]` where each string is in CamelCase notation.
- A pattern `pat` consisting of uppercase letters.

### Output:

- A list of words from `arr[]` that match the given pattern `pat`.

### Examples:

**Example 1:**

- Input: `arr[] = ["WelcomeGeek", "WelcomeToGeeksForGeeks", "GeeksForGeeks"], pat = "WTG"`
- Output: `["WelcomeToGeeksForGeeks"]`

**Example 2:**

- Input: `arr[] = ["Hi", "Hello", "HelloWorld", "HiTech", "HiGeek", "HiTechWorld", "HiTechCity", "HiTechLab"], pat = "HA"`
- Output: `[]`

### Constraints:

- `1 ≤ arr.size() ≤ 1000`
- `1 ≤ pat.size() ≤ 100`
- `1 ≤ arr[i].size() ≤ 100`
