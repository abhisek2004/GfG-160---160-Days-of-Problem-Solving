### **Combination Sum II**

**Difficulty:** Medium  
**Accuracy:** 49.5%  
**Submissions:** 40K+  
**Points:** 4

#### **Problem Statement:**

Given an array `arr[]` and a `target`, your task is to find all **unique combinations** in the array where the sum is equal to the target. Each number in `arr[]` may only be used **once** in the combination.

You can return your answer in **any order**.

---

### **Examples:**

#### **Example 1:**

**Input:**

```
arr[] = [1, 2, 3, 3, 5], target = 7
```

**Output:**

```
[[1, 3, 3], [2, 5]]
```

**Explanation:**  
Total number of possible combinations is 2.

---

#### **Example 2:**

**Input:**

```
arr[] = [5, 10, 15, 20, 25, 30], target = 30
```

**Output:**

```
[[5, 10, 15], [5, 25], [10, 20], [30]]
```

**Explanation:**  
Total number of possible combinations is 4.

---

#### **Example 3:**

**Input:**

```
arr[] = [6, 5, 7], target = 8
```

**Output:**

```
[]
```

**Explanation:**  
There are no possible combinations that sum to 8.

---

### **Constraints:**

- `1 ≤ arr.size() ≤ 100`
- `1 ≤ arr[i] ≤ 50`
- `1 ≤ target ≤ 30`
