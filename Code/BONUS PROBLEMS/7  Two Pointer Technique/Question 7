### **Pair Sum in a Sorted and Rotated Array**

**Difficulty**: Medium  
**Accuracy**: 51.12%  
**Submissions**: 135+  
**Points**: 4

---

### **Problem Statement**

You are given an array of positive integers `arr[]` that is sorted in ascending order and then rotated around an unknown point. Your task is to determine if there exists a pair of elements in the array whose sum is equal to a given `target`.

---

### **Examples**

#### Example 1

**Input**:  
`arr[] = [7, 9, 1, 3, 5]`  
`target = 6`  
**Output**:  
`true`  
**Explanation**:  
`arr[2]` (1) and `arr[4]` (5) sum to 6, which is equal to the target.

---

#### Example 2

**Input**:  
`arr[] = [2, 3, 4, 1]`  
`target = 3`  
**Output**:  
`true`  
**Explanation**:  
`arr[0]` (2) and `arr[3]` (1) sum to 3, which is equal to the target.

---

#### Example 3

**Input**:  
`arr[] = [10, 7, 4, 1]`  
`target = 9`  
**Output**:  
`false`  
**Explanation**:  
No pair of elements in `arr[]` sums to 9.

---

### **Constraints**

- \(2 \leq arr.size() \leq 10^6\)
- \(1 \leq arr[i] \leq 10^6\)
- \(1 \leq target \leq 10^6\)

---

### **Key Observations**

1. Since the array is sorted and rotated, identifying the pivot point (the index where the largest element is located) helps divide the array into two sorted subarrays.
2. Use a two-pointer approach to efficiently find a pair with the given sum in O(n) time.
